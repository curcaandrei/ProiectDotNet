name: .NET
version: 2.1

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

workflows:
  build_and_test:
    jobs:
      - build:
          context: 
            - context
            - SonarCloud
      - test:
          context:
            - context
            - SonarCloud
jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - build-tools/install-ci-tools
      - run:
          name: Restore dependencies
          command: dotnet restore
          working_directory: Backend
      - run:
          name: Build
          working_directory: Backend
          command: |
            dotnet tool install --global dotnet-sonarscanner
            dotnet build -p:RunAnalyzersDuringBuild=true
            dotnet-sonarscanner begin /k:"curcaandrei_ProiectDotNet" /d:sonar.login="7e0f8ea1ba6482996e76fa375d9741a7fc
            f3bda1"
            dotnet-sonarscanner end /d:sonar.login="24b7e46c9379af3fa53b89db1c2e6ad046827eaf"
      - sonarcloud/scan
  test:
    working_directory: Backend
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_TOKEN
    steps:
      - checkout
      - run:
          name: Creating Dummy Artifacts
          working_directory: artifacts
          command: |
            echo "my artifact file" > art-1;
            mkdir -p artifacts/artifacts;
            echo "my artifact files in a dir" > art-2;
      - store_artifacts:
          path: artifacts/art-1
          destination: artifact-file
      - store_artifacts:
          path: artifacts/artifacts
  
      - run:
          name: Test
          working_directory: Backend
          command: |
            dotnet test --logger:"xunit;LogFilePath=test_result.xml"
orbs:
    sonarcloud: sonarsource/sonarcloud@1.0.1
    build-tools: circleci/build-tools@3.0.0
